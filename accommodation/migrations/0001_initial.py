# Generated by Django 5.0 on 2023-12-12 10:30

import accommodation.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False, editable=False)),
                ('approved_at', models.DateTimeField(auto_now_add=True)),
                ('is_pinned', models.BooleanField(default=False, editable=False)),
                ('pinned_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('max_occupancy', models.PositiveIntegerField()),
                ('rent_price', models.PositiveIntegerField(help_text='Price per month in Nepali Rupees')),
                ('availability_calendar', models.DateField()),
                ('is_booked', models.BooleanField(default=False)),
                ('rental_type', models.IntegerField(choices=[(1, 'Monthly'), (2, 'Quarterly'), (3, 'Semi-Annually'), (4, 'Annually')])),
                ('square_footage', models.CharField(blank=True, help_text='Width x Length in feet', max_length=255, validators=[accommodation.validators.validate_dimension_format])),
                ('natural_light', models.IntegerField(choices=[(1, 'No Natural Light'), (2, 'Little Natural Light'), (3, 'Some Natural Light'), (4, 'Lots of Natural Light'), (5, 'Tons of Natural Light')], default=1)),
                ('security_deposit', models.PositiveIntegerField(default=0)),
                ('is_negotiable', models.BooleanField(default=False)),
                ('water_supply', models.IntegerField(choices=[(1, '24/7'), (2, '12/7'), (3, '8/7'), (4, '4/7'), (5, 'No Water Supply')], default=1)),
                ('minimum_stay', models.IntegerField(choices=[(1, 'None'), (2, '3 Months'), (3, '6 Months'), (4, '1 Year'), (4, '2 Year')], default=1)),
                ('is_furnished', models.BooleanField(default=False)),
                ('available_furnishings', models.CharField(blank=True, max_length=512)),
                ('tv', models.BooleanField(default=False)),
                ('internet', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('laundry', models.BooleanField(default=False)),
                ('room_cleaning', models.BooleanField(default=False)),
                ('parking_facility', models.IntegerField(choices=[(1, 'Two Wheeler'), (2, 'Four Wheeler'), (3, 'Both'), (4, 'None')], default=4)),
                ('electricity_backup', models.BooleanField(default=False)),
                ('bathroom_type', models.IntegerField(choices=[(1, 'Attached'), (2, 'Shared')])),
                ('with_shower', models.BooleanField(default=False)),
                ('with_bathtub', models.BooleanField(default=False)),
                ('wheelchair_accessible', models.BooleanField(default=False)),
                ('elevator_access', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('only_couples_allowed', models.BooleanField(default=False)),
                ('age_restriction', models.PositiveIntegerField(blank=True, help_text='Minimum age in years', null=True)),
                ('security_guard', models.BooleanField(default=False)),
                ('cctv', models.BooleanField(default=False)),
                ('fire_alarm', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('insurance_details', models.TextField(blank=True)),
                ('view_from_accommodation', models.TextField(blank=True)),
                ('nearby_points_of_interest', models.TextField(blank=True)),
                ('proximity_to_public_transport', models.CharField(blank=True, max_length=255)),
                ('noise_level', models.IntegerField(choices=[(1, 'Very Quiet'), (2, 'Quiet'), (3, 'Moderate'), (4, 'Loud'), (5, 'Very Loud')], default=4)),
                ('owner_full_name', models.CharField(max_length=255, null=True)),
                ('owner_contact_number', models.CharField(max_length=10, null=True, validators=[accommodation.validators.validate_nepali_phone_number])),
                ('my_own_asset', models.BooleanField(default=False, help_text='Check if you own the asset.')),
                ('no_of_bedrooms', models.PositiveIntegerField()),
                ('no_of_bathrooms', models.PositiveIntegerField()),
                ('building_type', models.IntegerField(choices=[(1, 'Single Family'), (2, 'Apartment'), (3, 'Hotel'), (4, 'Loft'), (5, 'Hostel'), (6, 'Cottage'), (7, 'Bungalow'), (8, 'Villa'), (9, 'Mansion'), (10, 'Farmhouse'), (11, 'Townhouse'), (12, 'Houseboat'), (13, 'Other')])),
                ('year_built', models.IntegerField()),
                ('name', models.CharField(blank=True, help_text='Descriptive name for the flat (e.g., "Modern Studio in Trendy Neighborhood", "Spacious Family Flat with Balcony").', max_length=255)),
                ('floor_level', models.PositiveIntegerField()),
                ('with_kitchen', models.BooleanField(default=True)),
                ('owner_lives_in_same_building', models.BooleanField(default=True)),
                ('for_office_use_only', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('pinned_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pinned_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False, editable=False)),
                ('approved_at', models.DateTimeField(auto_now_add=True)),
                ('is_pinned', models.BooleanField(default=False, editable=False)),
                ('pinned_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('max_occupancy', models.PositiveIntegerField()),
                ('rent_price', models.PositiveIntegerField(help_text='Price per month in Nepali Rupees')),
                ('availability_calendar', models.DateField()),
                ('is_booked', models.BooleanField(default=False)),
                ('rental_type', models.IntegerField(choices=[(1, 'Monthly'), (2, 'Quarterly'), (3, 'Semi-Annually'), (4, 'Annually')])),
                ('square_footage', models.CharField(blank=True, help_text='Width x Length in feet', max_length=255, validators=[accommodation.validators.validate_dimension_format])),
                ('natural_light', models.IntegerField(choices=[(1, 'No Natural Light'), (2, 'Little Natural Light'), (3, 'Some Natural Light'), (4, 'Lots of Natural Light'), (5, 'Tons of Natural Light')], default=1)),
                ('security_deposit', models.PositiveIntegerField(default=0)),
                ('is_negotiable', models.BooleanField(default=False)),
                ('water_supply', models.IntegerField(choices=[(1, '24/7'), (2, '12/7'), (3, '8/7'), (4, '4/7'), (5, 'No Water Supply')], default=1)),
                ('minimum_stay', models.IntegerField(choices=[(1, 'None'), (2, '3 Months'), (3, '6 Months'), (4, '1 Year'), (4, '2 Year')], default=1)),
                ('is_furnished', models.BooleanField(default=False)),
                ('available_furnishings', models.CharField(blank=True, max_length=512)),
                ('wheelchair_accessible', models.BooleanField(default=False)),
                ('elevator_access', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('only_couples_allowed', models.BooleanField(default=False)),
                ('age_restriction', models.PositiveIntegerField(blank=True, help_text='Minimum age in years', null=True)),
                ('security_guard', models.BooleanField(default=False)),
                ('cctv', models.BooleanField(default=False)),
                ('fire_alarm', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('insurance_details', models.TextField(blank=True)),
                ('view_from_accommodation', models.TextField(blank=True)),
                ('nearby_points_of_interest', models.TextField(blank=True)),
                ('proximity_to_public_transport', models.CharField(blank=True, max_length=255)),
                ('noise_level', models.IntegerField(choices=[(1, 'Very Quiet'), (2, 'Quiet'), (3, 'Moderate'), (4, 'Loud'), (5, 'Very Loud')], default=4)),
                ('owner_full_name', models.CharField(max_length=255, null=True)),
                ('owner_contact_number', models.CharField(max_length=10, null=True, validators=[accommodation.validators.validate_nepali_phone_number])),
                ('my_own_asset', models.BooleanField(default=False, help_text='Check if you own the asset.')),
                ('smart_tv', models.BooleanField(default=False)),
                ('smart_lighting', models.BooleanField(default=False)),
                ('smart_lock', models.BooleanField(default=False)),
                ('smart_thermostat', models.BooleanField(default=False)),
                ('smart_speaker', models.BooleanField(default=False)),
                ('smart_plug', models.BooleanField(default=False)),
                ('smart_camera', models.BooleanField(default=False)),
                ('smart_doorbell', models.BooleanField(default=False)),
                ('no_of_bedrooms', models.PositiveIntegerField()),
                ('no_of_bathrooms', models.PositiveIntegerField()),
                ('building_type', models.IntegerField(choices=[(1, 'Single Family'), (2, 'Apartment'), (3, 'Hotel'), (4, 'Loft'), (5, 'Hostel'), (6, 'Cottage'), (7, 'Bungalow'), (8, 'Villa'), (9, 'Mansion'), (10, 'Farmhouse'), (11, 'Townhouse'), (12, 'Houseboat'), (13, 'Other')])),
                ('year_built', models.IntegerField()),
                ('with_garden', models.BooleanField(default=False)),
                ('with_balcony', models.BooleanField(default=False)),
                ('with_terrace', models.BooleanField(default=False)),
                ('with_rooftop_deck', models.BooleanField(default=False)),
                ('with_pool', models.BooleanField(default=False)),
                ('with_gym', models.BooleanField(default=False)),
                ('with_fireplace', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, help_text='Descriptive name for the house (e.g., "Charming Cottage with Garden", "Modern Family Home").', max_length=255)),
                ('no_of_floors', models.PositiveIntegerField()),
                ('for_office_use_only', models.BooleanField(default=False)),
                ('with_customizable_option', models.BooleanField(default=False)),
                ('post_move_in_support', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('pinned_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pinned_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OfficeSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_meeting_rooms', models.PositiveIntegerField()),
                ('no_of_desks', models.PositiveIntegerField()),
                ('no_of_cubicles', models.PositiveIntegerField()),
                ('on_site_kitchen', models.BooleanField(default=False)),
                ('house', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accommodation.house')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False, editable=False)),
                ('approved_at', models.DateTimeField(auto_now_add=True)),
                ('is_pinned', models.BooleanField(default=False, editable=False)),
                ('pinned_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('max_occupancy', models.PositiveIntegerField()),
                ('rent_price', models.PositiveIntegerField(help_text='Price per month in Nepali Rupees')),
                ('availability_calendar', models.DateField()),
                ('is_booked', models.BooleanField(default=False)),
                ('rental_type', models.IntegerField(choices=[(1, 'Monthly'), (2, 'Quarterly'), (3, 'Semi-Annually'), (4, 'Annually')])),
                ('square_footage', models.CharField(blank=True, help_text='Width x Length in feet', max_length=255, validators=[accommodation.validators.validate_dimension_format])),
                ('natural_light', models.IntegerField(choices=[(1, 'No Natural Light'), (2, 'Little Natural Light'), (3, 'Some Natural Light'), (4, 'Lots of Natural Light'), (5, 'Tons of Natural Light')], default=1)),
                ('security_deposit', models.PositiveIntegerField(default=0)),
                ('is_negotiable', models.BooleanField(default=False)),
                ('water_supply', models.IntegerField(choices=[(1, '24/7'), (2, '12/7'), (3, '8/7'), (4, '4/7'), (5, 'No Water Supply')], default=1)),
                ('minimum_stay', models.IntegerField(choices=[(1, 'None'), (2, '3 Months'), (3, '6 Months'), (4, '1 Year'), (4, '2 Year')], default=1)),
                ('is_furnished', models.BooleanField(default=False)),
                ('available_furnishings', models.CharField(blank=True, max_length=512)),
                ('tv', models.BooleanField(default=False)),
                ('internet', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('laundry', models.BooleanField(default=False)),
                ('room_cleaning', models.BooleanField(default=False)),
                ('parking_facility', models.IntegerField(choices=[(1, 'Two Wheeler'), (2, 'Four Wheeler'), (3, 'Both'), (4, 'None')], default=4)),
                ('electricity_backup', models.BooleanField(default=False)),
                ('bathroom_type', models.IntegerField(choices=[(1, 'Attached'), (2, 'Shared')])),
                ('with_shower', models.BooleanField(default=False)),
                ('with_bathtub', models.BooleanField(default=False)),
                ('wheelchair_accessible', models.BooleanField(default=False)),
                ('elevator_access', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('only_couples_allowed', models.BooleanField(default=False)),
                ('age_restriction', models.PositiveIntegerField(blank=True, help_text='Minimum age in years', null=True)),
                ('security_guard', models.BooleanField(default=False)),
                ('cctv', models.BooleanField(default=False)),
                ('fire_alarm', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('insurance_details', models.TextField(blank=True)),
                ('view_from_accommodation', models.TextField(blank=True)),
                ('nearby_points_of_interest', models.TextField(blank=True)),
                ('proximity_to_public_transport', models.CharField(blank=True, max_length=255)),
                ('noise_level', models.IntegerField(choices=[(1, 'Very Quiet'), (2, 'Quiet'), (3, 'Moderate'), (4, 'Loud'), (5, 'Very Loud')], default=4)),
                ('owner_full_name', models.CharField(max_length=255, null=True)),
                ('owner_contact_number', models.CharField(max_length=10, null=True, validators=[accommodation.validators.validate_nepali_phone_number])),
                ('my_own_asset', models.BooleanField(default=False, help_text='Check if you own the asset.')),
                ('name', models.CharField(blank=True, help_text='Descriptive name for the room (e.g., "Cozy Garden View", "Spacious Family Room").', max_length=255)),
                ('floor_level', models.PositiveIntegerField()),
                ('with_kitchen_setup', models.BooleanField(default=False)),
                ('owner_lives_in_same_building', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('pinned_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pinned_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
